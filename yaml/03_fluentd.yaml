apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-gem
  namespace: kube-logging
data:
  Gemfile: |
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/Gemfile.erb

    source "https://rubygems.org"

    gem "fluentd", "1.4.2"
    gem "oj", "3.5.1"
    gem "fluent-plugin-multi-format-parser", "~> 1.0.0"
    gem "fluent-plugin-concat", "~> 2.3.0"
    gem "fluent-plugin-grok-parser", "~> 2.5.0"
    gem "fluent-plugin-prometheus", "~> 1.3.0"
    gem 'fluent-plugin-json-in-json-2', ">= 1.0.2"
    gem "fluent-plugin-rewrite-tag-filter", "~> 2.1.0"
    gem "fluent-plugin-elasticsearch", "~> 3.4.2"
    gem "fluent-plugin-opensearch", "~> 1.0.0"
    gem "fluent-plugin-kubernetes_metadata_filter", "~> 2.1.4"
    gem "ffi"
    gem "fluent-plugin-systemd", "~> 1.0.1"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-logging
  labels:
    app: fluentd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-logging
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - operator: Exists
      containers:
      - name: fluentd
        image: docker.io/tmaxcloudck/hypercloud:{FLUENTD_VERSION}
        command: ["/bin/bash", "-c", "fluentd -c /fluentd/etc/fluent.conf -p /fluentd/plugins"]
        env:
          - name: FLUENT_OPENSEARCH_HOST
            value: "opensearch"
          - name: FLUENT_OPENSEARCH_PORT
            value: "9200"
          - name: FLUENT_OPENSEARCH_USER
            value: "admin"
          - name: FLUENT_OPENSEARCH_PASSWORD
            value: "admin"
          - name: FLUENT_OPENSEARCH_SCHEME
            value: "https"
          - name: FLUENTD_SYSTEMD_CONF
            value: disable
          - name: FLUENT_ELASTICSEARCH_SED_DISABLE
            value: "true"
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: gem
          mountPath: /fluentd/Gemfile
          subPath: Gemfile
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - '-c'
            - |-
              LIVENESS_THRESHOLD_SECONDS=300
              STUCK_THRESHOLD_SECONDS=900
              if [[ ! -e /var/log/fluentd-buffer ]]; then exit 1; fi
              touch -d "900 seconds ago" /tmp/marker-stuck;
              if [[ -z "$(find /var/log/fluentd-buffer -type d -newer /tmp/marker-stuck -print -quit)" ]]; then rm -rf /var/log/fluentd-buffer; exit 1; fi
              touch -d "300 seconds ago" /tmp/marker-liveness;
              if [ -z "$(find /var/log/fluentd-buffer -type d -newer /tmp/marker-liveness -print -quit)" ]; then exit 1; fi
          initialDelaySeconds: 600
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - '-c'
            - |-
              LIVENESS_THRESHOLD_SECONDS=300
              STUCK_THRESHOLD_SECONDS=900
              if [[ ! -e /var/log/fluentd-buffer ]]; then exit 1; fi
              touch -d "900 seconds ago" /tmp/marker-stuck;
              if [[ -z "$(find /var/log/fluentd-buffer -type d -newer /tmp/marker-stuck -print -quit)" ]]; then rm -rf /var/log/fluentd-buffer; exit 1; fi
              touch -d "300 seconds ago" /tmp/marker-liveness;
              if [ -z "$(find /var/log/fluentd-buffer -type d -newer /tmp/marker-liveness -print -quit)" ]; then exit 1; fi
          initialDelaySeconds: 60
          periodSeconds: 6
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: gem
        configMap:
          name: fluentd-gem
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-logging
data:
  fluent.conf: |
        @include "#{ENV['FLUENTD_SYSTEMD_CONF'] || 'systemd'}.conf"
        @include "#{ENV['FLUENTD_PROMETHEUS_CONF'] || 'prometheus'}.conf"
        @include kubernetes.conf
        @include conf.d/*.conf

        <match **>
           @type opensearch
           @log_level info
           request_timeout 2147483648
           include_tag_key true
           host "#{ENV['FLUENT_OPENSEARCH_HOST']}"
           port "#{ENV['FLUENT_OPENSEARCH_PORT']}"
           path "#{ENV['FLUENT_OPENSEARCH_PATH']}"
           user "#{ENV['FLUENT_OPENSEARCH_USER']}"
           password "#{ENV['FLUENT_OPENSEARCH_PASSWORD']}"
           scheme "#{ENV['FLUENT_OPENSEARCH_SCHEME'] || 'https'}"
           ssl_verify "#{ENV['FLUENT_OPENSEARCH_SSL_VERIFY'] || 'false'}"
           ssl_version "#{ENV['FLUENT_OPENSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
           reload_connections "#{ENV['FLUENT_OPENSEARCH_RELOAD_CONNECTIONS'] || 'false'}"
           reconnect_on_error "#{ENV['FLUENT_OPENSEARCH_RECONNECT_ON_ERROR'] || 'true'}"
           reload_on_failure "#{ENV['FLUENT_OPENSEARCH_RELOAD_ON_FAILURE'] || 'true'}"
           log_os_400_reason "#{ENV['FLUENT_OPENSEARCH_LOG_OS_400_REASON'] || 'false'}"
           logstash_prefix "#{ENV['FLUENT_OPENSEARCH_LOGSTASH_PREFIX'] || 'logstash'}"
           logstash_format "#{ENV['FLUENT_OPENSEARCH_LOGSTASH_FORMAT'] || 'true'}"
           index_name "#{ENV['FLUENT_OPENSEARCH_LOGSTASH_INDEX_NAME'] || 'logstash'}"
           #type_name "#{ENV['FLUENT_OPENSEARCH_LOGSTASH_TYPE_NAME'] || 'fluentd'}"
           <buffer>
             @type file
             path /var/log/fluentd-buffer
             flush_thread_count "#{ENV['FLUENT_OPENSEARCH_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
             flush_interval "#{ENV['FLUENT_OPENSEARCH_BUFFER_FLUSH_INTERVAL'] || '5s'}"
             chunk_limit_size "#{ENV['FLUENT_OPENSEARCH_BUFFER_CHUNK_LIMIT_SIZE'] || '4M'}"
             queue_limit_length "#{ENV['FLUENT_OPENSEARCH_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
             retry_max_interval "#{ENV['FLUENT_OPENSEARCH_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
             retry_forever true
           </buffer>
        </match>
